{"version":3,"sources":["contexts/DexDataContext.js","Providers.js","components/Logo.js","views/About.js","hooks/useTokenLogos.js","components/Token.js","util/shuffleArray.js","hooks/useDexPools.js","hooks/useDexUrls.js","util/parseQueryString.js","views/TokenPair.js","components/CountUp/useOnScreen.js","components/CountUp/util.js","components/CountUp/CountUp.js","components/TokenButton.js","views/TokenPairList.js","components/ThemeToggleButton.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["BASE_URL","defaultDexData","dexUrls","tokenLogos","dexPools","DexDataContext","React","createContext","DexDataProvider","children","useState","dexData","setDexData","useEffect","Promise","all","fetch","then","r","json","dexPoolsJson","dexUrlsJson","tokenLogosJson","value","Provider","config","initialColorMode","window","localStorage","getItem","useSystemColorMode","theme","extendTheme","Providers","LOGO_SIZES","sm","md","xl","LogoStyle","styled","div","props","$colorMode","size","$size","grayscale","$greyscale","Logo","greyscale","colorMode","useColorMode","VerticalPad","About","useTokenLogos","useContext","TokenWrapper","TOKEN_SIZES","Token","token","thumb","find","logo","symbol","imageSize","src","alt","fallbackSrc","borderRadius","boxSize","mr","fontSize","shuffleArray","k","i","arr","len","length","d","array","Math","floor","random","push","splice","useDexPools","useMemo","pools","forEach","id","keys","Set","pool","key","stakeToken","earnToken","has","formattedTotalLiquidity","Intl","NumberFormat","format","parseInt","totalLiquidity","formattedAPR","APR","toFixed","formattedDepositFee","depositFee","dex","add","processPools","useDexUrls","parseQueryString","queryString","query","pairs","substr","split","pair","decodeURIComponent","PairNotFound","onClose","py","flexDirection","onClick","className","Controls","my","icon","ArrowBack","aria-label","variant","Close","TokenPair","useParams","history","useHistory","search","useLocation","handleClose","goBack","document","querySelector","scrollIntoView","onKeyPress","event","keyCode","addEventListener","removeEventListener","p","u","url","spacing","href","isExternal","casing","ExternalLink","m","useOnScreen","ref","rootMargin","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","current","observe","unobserve","getRandomInt","min","max","ceil","CountUpWrapper","end","formattingFn","decimals","quiet","prefix","suffix","start","options","setOptions","timerRef","useRef","onScreen","update","delay","duration","delta","tick","setTimeout","clearTimeout","TokenButton","leftIcon","StyledTable","Table","$hoverColor","formatTLV","n","style","currency","minimumFractionDigits","formatTLVSmall","notation","formatAPR","SORT_FIELDS","SORT_DIRECTIONS","SortIcon","field","sorting","Icon","UpDownIcon","direction","TriangleUpIcon","TriangleDownIcon","ResponsiveFlex","Flex","Headers","onSort","isNumeric","Filters","filters","onChange","bg","useColorModeValue","handleChange","e","target","name","handleClear","filter","position","top","zIndex","pointerEvents","Search","color","type","placeholder","tabIndex","SmallClose","colorScheme","px","TokenPairList","useMediaQuery","isSmallerThan375","buttonSize","tlvWrapperStyles","height","lineHeight","formatTLVfn","isExact","useRouteMatch","hoverColor","setFilters","setSorting","handleTokenClick","stopPropagation","handleSort","sortedPools","poolTmp","toLowerCase","indexOf","sort","a","b","reverse","display","$isExactMatch","map","dexQueryParam","some","pairUrl","handlePairClick","width","textAlign","CountUp","ThemeToggleButton","toggleColorMode","MoonIcon","SunIcon","Header","to","Footer","flexWrap","rel","App","maxWidth","flexGrow","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e1083083.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst BASE_URL = \"https://data.kitchenswap.finance\";\n\nconst defaultDexData = {\n  dexUrls: [],\n  tokenLogos: [],\n  dexPools: []\n};\n\nexport const DexDataContext = React.createContext();\n\nexport const DexDataProvider = ({ children }) => {\n  const [dexData, setDexData] = useState(defaultDexData);\n\n  useEffect(() => {\n    Promise.all([\n      fetch(`${BASE_URL}/dex-pools.json`).then(r => r.json()),\n      fetch(`${BASE_URL}/dex-urls.json`).then(r => r.json()),\n      fetch(`${BASE_URL}/token-logos.json`).then(r => r.json())\n    ]).then(([dexPoolsJson, dexUrlsJson, tokenLogosJson]) => {\n      setDexData({\n        ...dexData,\n        dexPools: dexPoolsJson,\n        dexUrls: dexUrlsJson,\n        tokenLogos: tokenLogosJson\n      });\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { dexUrls, dexPools, tokenLogos } = dexData;\n\n  const value = {\n    dexUrls,\n    dexPools,\n    tokenLogos,\n    setDexData\n  };\n\n  return (\n    <DexDataContext.Provider value={value}>{children}</DexDataContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ChakraProvider, ColorModeScript, extendTheme } from \"@chakra-ui/react\";\n\nimport { DexDataProvider } from \"./contexts/DexDataContext\";\n\nconst initialColorMode =\n  window.localStorage.getItem(\"chakra-ui-color-mode\") || \"light\";\n\nconst config = {\n  initialColorMode,\n  useSystemColorMode: false\n};\n\nconst theme = extendTheme({ config });\n\nconst Providers = ({ children }) => (\n  <DexDataProvider>\n    <Router>\n      <ChakraProvider theme={theme}>\n        <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n        {children}\n      </ChakraProvider>\n    </Router>\n  </DexDataProvider>\n);\n\nexport default Providers;\n","import React from \"react\";\nimport { useColorMode } from \"@chakra-ui/react\";\nimport styled from \"styled-components\";\n\nconst LOGO_SIZES = {\n  sm: \"1em\",\n  md: \"2em\",\n  xl: \"3em\"\n};\n\nconst LogoStyle = styled.div`\n  font-family: \"Baloo Chettan\\ 2\", sans-serif;\n  color: ${props => (props.$colorMode === \"dark\" ? \"#fff\" : \"#fd3f92\")};\n\n  ${props => {\n    const size = LOGO_SIZES[props.$size] || LOGO_SIZES.sm;\n\n    const grayscale = props.$greyscale ? \"filter: grayscale(100%)\" : \"\";\n\n    return `\n      font-size: ${size};\n      ${grayscale};\n    `;\n  }}\n`;\n\nconst Logo = ({ size, greyscale = false }) => {\n  const { colorMode } = useColorMode();\n\n  return (\n    <LogoStyle $colorMode={colorMode} $size={size} $greyscale={greyscale}>\n      <b>kitchen</b>swap\n    </LogoStyle>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport { Center } from \"@chakra-ui/react\";\nimport styled from \"styled-components\";\n\nimport Logo from \"../components/Logo\";\n\nconst VerticalPad = styled.div`\n  padding-top: 25%;\n`;\n\nconst About = () => {\n  return (\n    <Center>\n      <VerticalPad>\n        <Logo size=\"xl\" />\n      </VerticalPad>\n    </Center>\n  );\n};\n\nexport default About;\n","import { useContext } from \"react\";\n\nimport { DexDataContext } from \"../contexts/DexDataContext\";\n\nconst useTokenLogos = () => {\n  const DexData = useContext(DexDataContext);\n\n  const { tokenLogos = [] } = DexData;\n\n  return tokenLogos;\n};\n\nexport default useTokenLogos;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Image, Text } from \"@chakra-ui/react\";\n\nimport useTokenLogos from \"../hooks/useTokenLogos\";\n\nconst tokenFallbackSrc =\n  'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\"><ellipse ry=\"12\" rx=\"12\" cy=\"12\" cx=\"12\" fill=\"lightgrey\"/></svg>';\n\nconst TokenWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TOKEN_SIZES = {\n  md: \"20px\",\n  xl: \"25px\"\n};\n\nconst Token = ({ token, size = \"md\" }) => {\n  const tokenLogos = useTokenLogos();\n  const { thumb } = tokenLogos.find(logo => logo.symbol === token) || {};\n  const imageSize = TOKEN_SIZES[size] || TOKEN_SIZES.md;\n\n  return (\n    <TokenWrapper>\n      <Image\n        src={thumb}\n        alt={token}\n        fallbackSrc={tokenFallbackSrc}\n        borderRadius=\"full\"\n        boxSize={imageSize}\n        mr=\"2\"\n      />\n      <Text fontSize={size}>{token}</Text>\n    </TokenWrapper>\n  );\n};\n\nexport default Token;\n","const shuffleArray = (arr = []) => {\n  var len = arr.length;\n  var d = len;\n  var array = [];\n  var k, i;\n  for (i = 0; i < d; i++) {\n    k = Math.floor(Math.random() * len);\n    array.push(arr[k]);\n    arr.splice(k, 1);\n    len = arr.length;\n  }\n  for (i = 0; i < d; i++) {\n    arr[i] = array[i];\n  }\n  return arr;\n};\n\nexport default shuffleArray;\n","import { useMemo, useContext } from \"react\";\n\nimport { DexDataContext } from \"../contexts/DexDataContext\";\nimport shuffleArray from \"../util/shuffleArray\";\n\nconst processPools = (dexPools = []) => {\n  const pools = [];\n\n  dexPools.forEach(({ id, value }) => {\n    const keys = new Set();\n\n    value.forEach(pool => {\n      const key = `${id}_${pool.stakeToken}_${pool.earnToken}`;\n\n      if (!keys.has(key)) {\n        pools.push({\n          ...pool,\n          formattedTotalLiquidity: new Intl.NumberFormat().format(\n            parseInt(pool.totalLiquidity, 10)\n          ),\n          formattedAPR: pool.APR.toFixed(2),\n          formattedDepositFee: (pool.depositFee || 0).toFixed(2),\n          depositFee: pool.depositFee || 0,\n          dex: id,\n          key\n        });\n      }\n\n      keys.add(key);\n    });\n  });\n\n  shuffleArray(pools);\n\n  return pools;\n};\n\nconst useDexPools = () => {\n  const DexData = useContext(DexDataContext);\n  const { dexPools = [] } = DexData;\n\n  const pools = useMemo(() => processPools(dexPools), [dexPools]);\n\n  return pools;\n};\n\nexport default useDexPools;\n","import { useContext } from \"react\";\n\nimport { DexDataContext } from \"../contexts/DexDataContext\";\n\nconst useDexUrls = () => {\n  const DexData = useContext(DexDataContext);\n\n  const { dexUrls = [] } = DexData;\n\n  return dexUrls;\n};\n\nexport default useDexUrls;\n","const parseQueryString = (queryString = \"\") => {\n  const query = {};\n  const pairs = (queryString[0] === \"?\"\n    ? queryString.substr(1)\n    : queryString\n  ).split(\"&\");\n  for (let i = 0; i < pairs.length; i++) {\n    const pair = pairs[i].split(\"=\");\n    query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || \"\");\n  }\n  return query;\n};\n\nexport default parseQueryString;\n","import React, { useEffect } from \"react\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\nimport {\n  Container,\n  IconButton,\n  Flex,\n  Box,\n  Spacer,\n  Center,\n  Heading,\n  Text,\n  Spinner,\n  Stat,\n  StatLabel,\n  StatNumber,\n  Link,\n  Wrap,\n  WrapItem\n} from \"@chakra-ui/react\";\nimport { ArrowBackIcon, CloseIcon, ExternalLinkIcon } from \"@chakra-ui/icons\";\n\nimport Token from \"../components/Token\";\nimport useDexPools from \"../hooks/useDexPools\";\nimport useDexUrls from \"../hooks/useDexUrls\";\nimport parseQueryString from \"../util/parseQueryString\";\n\nconst ESCAPE_KEY = 27;\n\nconst PairNotFound = ({ onClose }) => {\n  return (\n    <Center py=\"16\" flexDirection=\"column\">\n      <Heading size=\"3xl\" py=\"4\">\n        Pair not found\n      </Heading>\n      <Text fontSize=\"sm\" onClick={onClose} className=\"cursor-pointer\">\n        Go back to the list\n      </Text>\n    </Center>\n  );\n};\n\nconst Controls = ({ onClose, children }) => (\n  <Container>\n    <Flex my=\"2\">\n      <Box>\n        <IconButton\n          icon={<ArrowBackIcon />}\n          aria-label=\"Back\"\n          variant=\"outline\"\n          onClick={onClose}\n        />\n      </Box>\n      <Spacer />\n      <Box>\n        <IconButton\n          icon={<CloseIcon />}\n          aria-label=\"Close\"\n          variant=\"outline\"\n          onClick={onClose}\n        />\n      </Box>\n    </Flex>\n\n    <Box py=\"8\">{children}</Box>\n  </Container>\n);\n\nconst TokenPair = () => {\n  const pools = useDexPools();\n  const dexUrls = useDexUrls();\n  const { stakeToken, earnToken } = useParams();\n  const history = useHistory();\n  const location = useLocation();\n  const { search } = location;\n  const { dex = \"\" } = parseQueryString(search);\n\n  const handleClose = () => {\n    if (history.length) {\n      return history.goBack();\n    }\n\n    history.push(\"/\");\n  };\n\n  useEffect(() => {\n    document.querySelector('#header-logo').scrollIntoView(); // a happy hack\n\n    const onKeyPress = event => event.keyCode === ESCAPE_KEY && handleClose();\n    window.document.addEventListener(\"keydown\", onKeyPress);\n    return () => {\n      window.document.removeEventListener(\"keydown\", onKeyPress);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const pool = pools.find(p => {\n    if (p.stakeToken === stakeToken && p.earnToken === earnToken) {\n      if (dex.length > 0) {\n        if (p.dex !== dex) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    return false;\n  });\n\n  if (pools.length === 0) {\n    return (\n      <Controls onClose={handleClose}>\n        <Spinner />\n      </Controls>\n    );\n  }\n\n  if (!pool) {\n    return (\n      <Controls onClose={handleClose}>\n        <PairNotFound onClose={handleClose} />\n      </Controls>\n    );\n  }\n\n  const { url = \"\" } = dexUrls.find(u => u.id === pool.dex) || {};\n\n  const { formattedDepositFee, formattedAPR, formattedTotalLiquidity } = pool;\n\n  return (\n    <Controls onClose={handleClose}>\n      <Wrap spacing=\"3em\">\n        <WrapItem>\n          <Stat>\n            <StatLabel>Stake</StatLabel>\n            <StatNumber>\n              <Token token={stakeToken} size=\"xl\" />\n            </StatNumber>\n          </Stat>\n        </WrapItem>\n\n        <WrapItem>\n          <Stat>\n            <StatLabel>Earn</StatLabel>\n            <StatNumber>\n              <Token token={earnToken} size=\"xl\" />\n            </StatNumber>\n          </Stat>\n        </WrapItem>\n      </Wrap>\n\n      <Wrap spacing=\"3em\">\n        <WrapItem>\n          <Stat>\n            <StatLabel>Deposit Fee</StatLabel>\n            <StatNumber>{formattedDepositFee}%</StatNumber>\n          </Stat>\n        </WrapItem>\n\n        <WrapItem>\n          <Stat>\n            <StatLabel>TLV</StatLabel>\n            <StatNumber>${formattedTotalLiquidity}</StatNumber>\n          </Stat>\n        </WrapItem>\n\n        <WrapItem>\n          <Stat>\n            <StatLabel>APR</StatLabel>\n            <StatNumber>{formattedAPR}%</StatNumber>\n          </Stat>\n        </WrapItem>\n      </Wrap>\n\n      <Wrap spacing=\"3em\">\n        <WrapItem>\n          <Stat>\n            <StatLabel>Available at</StatLabel>\n            <StatNumber>\n              <Link href={url} isExternal>\n                <Text casing=\"capitalize\">\n                  {pool.dex} <ExternalLinkIcon m=\"2px\" />\n                </Text>\n              </Link>\n            </StatNumber>\n          </Stat>\n        </WrapItem>\n      </Wrap>\n    </Controls>\n  );\n};\n\nexport default TokenPair;\n","import { useState, useEffect } from \"react\";\n\nfunction useOnScreen(ref, rootMargin = \"0px\") {\n  // State and setter for storing whether element is visible\n  const [isIntersecting, setIntersecting] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        // Update our state when observer callback fires\n        setIntersecting(entry.isIntersecting);\n      },\n      {\n        rootMargin\n      }\n    );\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    return () => {\n      if (!ref.current) return;\n\n      observer.unobserve(ref.current); // eslint-disable-line react-hooks/exhaustive-deps\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return isIntersecting;\n}\n\nexport default useOnScreen;\n","export const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getRandomSign = () => (Math.random() < 0.5 ? -1 : 1);\n","import React, { useEffect, useState, useRef } from \"react\";\nimport CountUp from \"react-countup\";\n\nimport useOnScreen from \"./useOnScreen\";\nimport { getRandomInt, getRandomSign } from \"./util\";\n\nconst CountUpWrapper = ({\n  end,\n  formattingFn,\n  decimals = 0,\n  quiet = false,\n  prefix,\n  suffix\n}) => {\n  const [options, setOptions] = useState({\n    start: end\n  });\n\n  const timerRef = useRef();\n  const ref = useRef();\n  const onScreen = useOnScreen(ref);\n\n  const update = () => {\n    const delay = getRandomInt(1, 3);\n    const duration = getRandomInt(0, 2);\n    const delta = (getRandomSign() * getRandomInt(0, 3)) / 10 ** decimals;\n    let start = end - delta;\n    if (start < 0) {\n      start = 0;\n    }\n\n    setOptions({\n      start,\n      delay,\n      duration\n    });\n  };\n\n  const tick = () => {\n    if (!quiet) update();\n    timerRef.current = setTimeout(() => {\n      tick();\n    }, getRandomInt(10000, 15000));\n  };\n\n  useEffect(() => {\n    if (!onScreen) {\n      clearTimeout(timerRef.current);\n      return;\n    }\n\n    tick();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onScreen]);\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(timerRef.current);\n    };\n  }, []);\n\n  return (\n    <div ref={ref}>\n      <CountUp\n        start={options.start}\n        end={end}\n        decimals={decimals}\n        duration={options.duration}\n        delay={options.delay}\n        formattingFn={formattingFn}\n        prefix={prefix}\n        suffix={suffix}\n      />\n    </div>\n  );\n};\n\nexport default CountUpWrapper;\n","import React from \"react\";\nimport { Image, Button } from \"@chakra-ui/react\";\n\nimport useTokenLogos from \"../hooks/useTokenLogos\";\n\nconst tokenFallbackSrc =\n  'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\"><ellipse ry=\"12\" rx=\"12\" cy=\"12\" cx=\"12\" fill=\"lightgrey\"/></svg>';\n\nconst TokenButton = props => {\n  const tokenLogos = useTokenLogos();\n  const { thumb } =\n    tokenLogos.find(logo => logo.symbol === props.children) || {};\n  \n  let boxSize;\n  if (props.size === \"sm\") {\n    boxSize = '20px';\n  }\n\n  return (\n    <Button\n      {...props}\n      leftIcon={\n        <Image\n          src={thumb}\n          alt={props.children}\n          fallbackSrc={tokenFallbackSrc}\n          borderRadius=\"full\"\n          boxSize={boxSize}\n        />\n      }\n    />\n  );\n};\n\nexport default TokenButton;\n","import React, { useState, useMemo } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n  IconButton,\n  Flex,\n  Box,\n  Spacer,\n  useColorModeValue,\n  Spinner,\n  useMediaQuery\n} from \"@chakra-ui/react\";\nimport {\n  TriangleDownIcon,\n  TriangleUpIcon,\n  UpDownIcon,\n  SearchIcon,\n  SmallCloseIcon\n} from \"@chakra-ui/icons\";\n\nimport CountUp from \"../components/CountUp\";\nimport TokenButton from \"../components/TokenButton\";\nimport useDexPools from \"../hooks/useDexPools\";\n\nconst StyledTable = styled(Table)`\n  & tbody tr {\n    &:hover {\n      background-color: ${props => props.$hoverColor};\n    }\n  }\n`;\n\nconst formatTLV = n =>\n  new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0\n  }).format(parseInt(n, 10));\n\nconst formatTLVSmall = n => `$${new\n  Intl.NumberFormat('en-US', { notation: 'compact' })\n  .format(n)}`;\n\nconst formatAPR = n => {\n  const value = n.toFixed(2);\n  if (value.length > 8) {\n    return '∞%';\n  }\n  return `${n.toFixed(2)}%`;\n};\n\nconst SORT_FIELDS = {\n  stakeToken: \"stakeToken\",\n  earnToken: \"earnToken\",\n  TLV: \"totalLiquidity\",\n  APR: \"APR\"\n};\n\nconst SORT_DIRECTIONS = {\n  DESC: \"DESC\",\n  ASC: \"ASC\"\n};\n\nconst SortIcon = ({ field, sorting }) => {\n  let Icon = UpDownIcon;\n\n  if (field === sorting.field && sorting.direction === SORT_DIRECTIONS.ASC) {\n    Icon = TriangleUpIcon;\n  }\n  if (field === sorting.field && sorting.direction === SORT_DIRECTIONS.DESC) {\n    Icon = TriangleDownIcon;\n  }\n\n  return <Icon />;\n};\n\nconst ResponsiveFlex = styled(Flex)`\n  justify-content: space-between;\n  & > * {\n    width: 50%;\n  }\n\n  @media (max-width: 600px) {\n    & {\n      flex-direction: column;\n    }\n    & > * {\n      width: 100%;\n      overflow: hidden;\n    }\n  }\n`;\n\nconst Headers = ({ onSort, sorting }) => (\n  <Tr>\n    <Th>\n      <ResponsiveFlex>\n        <Box\n          py=\"2\"\n          className=\"cursor-pointer\"\n          onClick={() => onSort(SORT_FIELDS.stakeToken)}\n        >\n          Stake token{\" \"}\n          <SortIcon field={SORT_FIELDS.stakeToken} sorting={sorting} />\n        </Box>\n        <Box\n          py=\"2\"\n          className=\"cursor-pointer\"\n          onClick={() => onSort(SORT_FIELDS.earnToken)}\n        >\n          Earn token{\" \"}\n          <SortIcon field={SORT_FIELDS.earnToken} sorting={sorting} />\n        </Box>\n      </ResponsiveFlex>\n    </Th>\n\n    <Th isNumeric>\n      <ResponsiveFlex>\n        <Box\n          py=\"2\"\n          className=\"cursor-pointer\"\n          onClick={() => onSort(SORT_FIELDS.TLV)}\n        >\n          TLV <SortIcon field={SORT_FIELDS.TLV} sorting={sorting} />\n        </Box>\n        <Box\n          py=\"2\"\n          className=\"cursor-pointer\"\n          onClick={() => onSort(SORT_FIELDS.APR)}\n        >\n          APR <SortIcon field={SORT_FIELDS.APR} sorting={sorting} />\n        </Box>\n      </ResponsiveFlex>\n    </Th>\n  </Tr>\n);\n\nconst Filters = ({ filters, onChange }) => {\n  const bg = useColorModeValue(\"white\", \"gray.800\");\n  const { stakeToken, earnToken } = filters;\n\n  const handleChange = e =>\n    onChange({\n      ...filters,\n      [e.target.name]: e.target.value\n    });\n\n  const handleClear = filter =>\n    onChange({\n      ...filters,\n      [filter]: \"\"\n    });\n\n  return (\n    <Flex\n      style={{\n        position: \"sticky\",\n        top: 0\n      }}\n      bg={bg}\n      my=\"2\"\n      zIndex=\"3\"\n    >\n      <Box py=\"4\">\n        <InputGroup>\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={<SearchIcon color=\"gray.300\" />}\n          />\n          <Input\n            type=\"text\"\n            placeholder=\"Stake Token\"\n            value={stakeToken}\n            name=\"stakeToken\"\n            onChange={handleChange}\n            tabIndex=\"1\"\n          />\n          {stakeToken.length > 0 && (\n            <InputRightElement>\n              <IconButton\n                variant=\"ghost\"\n                onClick={() => handleClear(\"stakeToken\")}\n                aria-label=\"Clear\"\n                icon={<SmallCloseIcon />}\n                size=\"sm\"\n                colorScheme=\"blue\"\n              />\n            </InputRightElement>\n          )}\n        </InputGroup>\n      </Box>\n\n      <Spacer px=\"2\" />\n\n      <Box py=\"4\">\n        <InputGroup>\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={<SearchIcon color=\"gray.300\" />}\n          />\n          <Input\n            type=\"text\"\n            placeholder=\"Earn Token\"\n            value={earnToken}\n            name=\"earnToken\"\n            onChange={handleChange}\n            tabIndex=\"2\"\n          />\n          {earnToken.length > 0 && (\n            <InputRightElement>\n              <IconButton\n                variant=\"ghost\"\n                onClick={() => handleClear(\"earnToken\")}\n                aria-label=\"Clear\"\n                icon={<SmallCloseIcon />}\n                size=\"sm\"\n                colorScheme=\"blue\"\n              />\n            </InputRightElement>\n          )}\n        </InputGroup>\n      </Box>\n    </Flex>\n  );\n};\n\nconst TokenPairList = () => {\n  const [isSmallerThan375] = useMediaQuery(\"(max-width: 375px)\");\n  const buttonSize = isSmallerThan375 ? \"sm\" : \"md\";\n  const tlvWrapperStyles = {\n    height: isSmallerThan375 ? \"48px\" : \"56px\",\n    lineHeight: isSmallerThan375 ? \"32px\" : \"36px\"\n  }\n\n  const formatTLVfn = isSmallerThan375 ? formatTLVSmall : formatTLV;\n\n  const history = useHistory();\n  const { isExact } = useRouteMatch();\n  const pools = useDexPools();\n  const hoverColor = useColorModeValue(\"#ebf8ff\", \"#2A4365\");\n  const [filters, setFilters] = useState({\n    stakeToken: \"\",\n    earnToken: \"\"\n  });\n  const [sorting, setSorting] = useState({\n    field: null,\n    direction: null\n  });\n\n  const handleTokenClick = (e, filter, pool) => {\n    if (pool[filter] !== filters[filter]) {\n      e.stopPropagation();\n      setFilters({\n        ...filters,\n        [filter]: pool[filter]\n      });\n    }\n  };\n\n  const handleSort = field => {\n    if (sorting.field === field && sorting.direction === SORT_DIRECTIONS.ASC) {\n      return setSorting({});\n    }\n    if (sorting.field === field && sorting.direction === SORT_DIRECTIONS.DESC) {\n      return setSorting({\n        direction: SORT_DIRECTIONS.ASC,\n        field\n      });\n    }\n\n    setSorting({\n      direction: SORT_DIRECTIONS.DESC,\n      field\n    });\n  };\n\n  const sortedPools = useMemo(() => {\n    const poolTmp = [...pools].filter(pool => {\n      const { stakeToken, earnToken } = pool;\n      if (filters.stakeToken.length > 0) {\n        if (\n          stakeToken.toLowerCase().indexOf(filters.stakeToken.toLowerCase()) ===\n          -1\n        ) {\n          return false;\n        }\n      }\n      if (filters.earnToken.length > 0) {\n        if (\n          earnToken.toLowerCase().indexOf(filters.earnToken.toLowerCase()) ===\n          -1\n        ) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n\n    if (sorting.field) {\n      if (\n        sorting.field === SORT_FIELDS.stakeToken ||\n        sorting.field === SORT_FIELDS.earnToken\n      ) {\n        poolTmp.sort((a, b) => {\n          if (a[sorting.field] < b[sorting.field]) {\n            return -1;\n          }\n          if (a[sorting.field] > b[sorting.field]) {\n            return 1;\n          }\n          return 0;\n        });\n      } else {\n        poolTmp.sort((a, b) => {\n          return b[sorting.field] - a[sorting.field];\n        });\n      }\n\n      if (sorting.direction === SORT_DIRECTIONS.ASC) {\n        poolTmp.reverse();\n      }\n    }\n\n    const filteredPools = poolTmp\n      .filter(p => p.APR > 1 && p.totalLiquidity > 1);\n\n    return filteredPools;\n  }, [pools, filters, sorting]);\n\n  const handlePairClick = pool => {\n    const { dex, stakeToken, earnToken } = pool;\n\n    const isRepeated = pools.some(\n      p =>\n        p.dex !== dex &&\n        p.stakeToken === stakeToken &&\n        p.earnToken === earnToken\n    );\n\n    const dexQueryParam = isRepeated ? `?dex=${dex}` : \"\";\n\n    const pairUrl = `/pair/${stakeToken}/${earnToken}${dexQueryParam}`;\n\n    history.push(pairUrl);\n  };\n\n  if (isExact && sortedPools.length === 0) {\n    return <Spinner />;\n  }\n\n  return (\n    <div\n      style={{\n        display: isExact ? \"block\" : \"none\"\n      }}\n    >\n      <Filters filters={filters} onChange={setFilters} />\n\n      <StyledTable\n        variant=\"simple\"\n        $isExactMatch={isExact}\n        $hoverColor={hoverColor}\n      >\n        <TableCaption>Don't forget to DYOR</TableCaption>\n\n        <Thead>\n          <Headers onSort={handleSort} sorting={sorting} />\n        </Thead>\n        <Tbody>\n          {sortedPools.map(pool => (\n            <Tr\n              className=\"cursor-pointer\"\n              key={pool.key}\n              onClick={() => handlePairClick(pool)}\n            >\n              <Td>\n                <ResponsiveFlex>\n                  <Box py=\"2\">\n                    <TokenButton\n                      variant=\"outline\"\n                      width=\"120px\"\n                      onClick={e => handleTokenClick(e, \"stakeToken\", pool)}\n                      size={buttonSize}\n                    >\n                      {pool.stakeToken}\n                    </TokenButton>\n                  </Box>\n                  <Box py=\"2\">\n                    <TokenButton\n                      variant=\"outline\"\n                      width=\"120px\"\n                      onClick={e => handleTokenClick(e, \"earnToken\", pool)}\n                      size={buttonSize}\n                    >\n                      {pool.earnToken}\n                    </TokenButton>\n                  </Box>\n                </ResponsiveFlex>\n              </Td>\n              <Td isNumeric>\n                <ResponsiveFlex textAlign=\"align-right\">\n                  <Box py=\"2\" height={tlvWrapperStyles.height} lineHeight={tlvWrapperStyles.lineHeight}>\n                    <CountUp\n                      end={pool.totalLiquidity}\n                      decimals={0}\n                      formattingFn={formatTLVfn}\n                    />\n                  </Box>\n                  <Box py=\"2\" height={tlvWrapperStyles.height} lineHeight={tlvWrapperStyles.lineHeight}>\n                    <CountUp end={pool.APR} decimals={2} suffix=\"%\" formattingFn={formatAPR} />\n                  </Box>\n                </ResponsiveFlex>\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n        <Tfoot>\n          <Headers onSort={handleSort} sorting={sorting} />\n        </Tfoot>\n      </StyledTable>\n    </div>\n  );\n};\n\nexport default TokenPairList;\n","import React from \"react\";\nimport { IconButton, useColorMode } from \"@chakra-ui/react\";\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\n\nconst ThemeToggleButton = ({ className }) => {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const Icon = colorMode === \"light\" ? MoonIcon : SunIcon;\n\n  return (\n    <IconButton\n      variant=\"outline\"\n      onClick={toggleColorMode}\n      aria-label={`Toggle ${colorMode === \"light\" ? \"Dark\" : \"Light\"}`}\n      icon={<Icon />}\n      className={className}\n    />\n  );\n};\n\nexport default ThemeToggleButton;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Flex, Box, Spacer } from \"@chakra-ui/react\";\n\nimport ThemeToggleButton from \"./ThemeToggleButton\";\nimport Logo from \"./Logo\";\n\nconst Header = () => {\n  return (\n    <Flex my=\"2\">\n      <Box py=\"4\" id=\"header-logo\">\n        <NavLink to=\"/\">\n          <Logo size=\"md\" />\n        </NavLink>\n      </Box>\n      <Spacer px=\"2\" />\n      <Box py=\"4\">\n        <ThemeToggleButton />\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Box, Center, Flex, Text } from \"@chakra-ui/react\";\n\nimport Logo from \"./Logo\";\n\nconst Footer = () => {\n  return (\n    <Center>\n      <Flex py=\"12\" flexWrap=\"wrap\">\n        <Box p=\"8\">\n          <NavLink to=\"/\">\n            <Logo greyscale />\n          </NavLink>\n        </Box>\n        <Box p=\"8\">\n          <Text fontSize=\"sm\" casing=\"uppercase\">\n            <a\n              href=\"https://twitter.com/kitchen_swap\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Twitter\n            </a>\n          </Text>\n        </Box>\n        <Box p=\"8\">\n          <Text fontSize=\"sm\" casing=\"uppercase\">\n            <a\n              href=\"https://medium.com/@kitchenswap\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              MEDIUM\n            </a>\n          </Text>\n        </Box>\n\n        <Box p=\"8\">\n          <Text fontSize=\"sm\" casing=\"uppercase\">\n            <a\n              href=\"https://docs.kitchenswap.finance/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              DOCS\n            </a>\n          </Text>\n        </Box>\n        <Box p=\"8\">\n          <Text fontSize=\"sm\" casing=\"uppercase\">\n            <a\n              href=\"https://docs.kitchenswap.finance//roadmap\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              ROADMAP\n            </a>\n          </Text>\n        </Box>\n      </Flex>\n    </Center>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Container } from \"@chakra-ui/react\";\n\nimport About from \"./views/About\";\nimport TokenPair from \"./views/TokenPair\";\nimport TokenPairList from \"./views/TokenPairList\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  return (\n    <Container\n      style={{\n        maxWidth: \"1200px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\"\n      }}\n    >\n      <Header />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          flexGrow: 1\n        }}\n      >\n        <TokenPairList /> {/** left outside of Switch for perfomance issues! */}\n        <Switch>\n          <Route path=\"/pair/:stakeToken/:earnToken\">\n            <TokenPair />\n          </Route>\n\n          <Route path=\"/about\">\n            <About />\n          </Route>\n        </Switch>\n      </div>\n      <Footer />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Providers from \"./Providers\";\n\nimport \"./style.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Providers>\n    <App />\n  </Providers>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}