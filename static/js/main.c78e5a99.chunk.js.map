{"version":3,"sources":["Tilt.js","App.js","index.js"],"names":["Tilt","children","className","reverse","max","perspective","easing","scale","speed","axis","reset","useState","willChange","transition","style","setStyle","tiltRef","useRef","useEffect","current","cancelAnimationFrame","updateCall","ref","onPointerLeave","window","requestAnimationFrame","transform","onPointerMove","e","rect","getBoundingClientRect","left","top","width","offsetWidth","height","offsetHeight","pointer","clientX","nativeEvent","clientY","x","y","_x","Math","min","_y","tiltX","toFixed","tiltY","AccountButton","history","useHistory","onClick","push","Home","NoMatch","Earn","Exchange","App","to","src","alt","exact","path","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA4FeA,EA1FF,SAAC,GAWP,IAVLC,EAUI,EAVJA,SACAC,EASI,EATJA,UASI,IARJC,eAQI,MARM,EAQN,MAPJC,WAOI,MAPE,GAOF,MANJC,mBAMI,MANU,IAMV,MALJC,cAKI,MALK,gCAKL,MAJJC,aAII,MAJI,MAIJ,MAHJC,aAGI,MAHI,OAGJ,MAFJC,YAEI,MAFG,KAEH,MADJC,aACI,WACsBC,mBAAS,CACjCC,WAAY,YACZC,WAAW,GAAD,OAAKL,EAAL,cAAgBF,KAHxB,mBACGQ,EADH,KACUC,EADV,KAKEC,EAAUC,mBA6DhB,OAPAC,qBAAU,WACR,OAAO,WACAF,EAAQG,SACbC,qBAAqBJ,EAAQG,QAAQE,eAEtC,IAGD,qBACEC,IAAKN,EACLF,MAAOA,EACPZ,UAAWA,EACXqB,eAhEuB,WACrBP,EAAQG,SACVC,qBAAqBJ,EAAQG,QAAQE,YAGlCX,GAELc,OAAOC,uBAAsB,WAC3BV,EAAS,2BACJD,GADG,IAENY,UAAU,eAAD,OAAiBrB,EAAjB,2DAuDXsB,cAlDsB,SAACC,GACU,OAA/BZ,EAAQG,QAAQE,YAClBG,OAAOJ,qBAAqBJ,EAAQG,QAAQE,YAG9C,IAAMQ,EAAOb,EAAQG,QAAQW,wBACrBC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,IACRC,EAAQjB,EAAQG,QAAQe,YACxBC,EAASnB,EAAQG,QAAQiB,aAE/BpB,EAAQG,QAAQkB,QAAU,CACxBC,QAASV,EAAEW,YAAYD,QACvBE,QAASZ,EAAEW,YAAYC,SAGzBxB,EAAQG,QAAQE,WAAaI,uBAAsB,WACjD,IAAMgB,GAAKb,EAAEW,YAAYD,QAAUP,GAAQE,EACrCS,GAAKd,EAAEW,YAAYC,QAAUR,GAAOG,EAEpCQ,EAAKC,KAAKC,IAAID,KAAKxC,IAAIqC,EAAG,GAAI,GAC9BK,EAAKF,KAAKC,IAAID,KAAKxC,IAAIsC,EAAG,GAAI,GAE9BK,GAAS5C,GAAWC,EAAM,EAAIuC,EAAKvC,IAAM4C,QAAQ,GACjDC,GAAS9C,GAAW2C,EAAK1C,EAAMA,EAAM,IAAI4C,QAAQ,GAEvDjC,EAAS,2BACJD,GADG,IAENY,UAAW,sBAAerB,EAAf,0BACqB,MAATI,EAAe,EAAIwC,EAD/B,2BAEqB,MAATxC,EAAe,EAAIsC,EAF/B,2BAGWxC,EAHX,aAGqBA,EAHrB,aAG+BA,EAH/B,QAMbS,EAAQG,QAAQE,WAAa,SAY/B,SAOGpB,KCpFDiD,EAAgB,WACpB,IAAMC,EAAUC,cAMhB,OACE,wBACElD,UAAU,wBACVmD,QAPgB,WAClBF,EAAQG,KAAK,aAIb,sBASEC,EAAO,WACX,OACE,cAAC,EAAD,CAAMrD,UAAU,OAAOE,IAAK,EAAGG,MAAO,KAAtC,SACE,sBAAKL,UAAU,aAAf,UACE,wCADF,aAOAsD,EAAU,WACd,OACE,uDAIEC,EAAO,WACX,OACE,6CAIEC,EAAW,WACf,OACE,iDA0EWC,EAtEH,WACV,OACE,sBAAKzD,UAAU,MAAf,UACE,iCACE,sBAAKA,UAAU,0BAAf,UACE,qBAAKA,UAAU,eAAf,SACE,eAAC,IAAD,CAAS0D,GAAG,IAAZ,UACE,qBAAKC,IAAI,gBAAgBC,IAAI,gBAC7B,wCAFF,YAKF,qBAAK5D,UAAU,SAAf,SACE,8BACE,gCACE,cAAC,IAAD,CAAS0D,GAAG,QAAZ,kBAGA,cAAC,IAAD,CAASA,GAAG,YAAZ,6BAMN,qBAAK1D,UAAU,QAAf,SACE,cAAC,EAAD,WAKN,yBAASA,UAAU,OAAnB,SACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6D,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,EAAD,aAKR,iCACE,sBAAK9D,UAAU,aAAf,UACE,eAAC,IAAD,CAAS0D,GAAG,IAAZ,UACE,qBAAKC,IAAI,gBAAgBC,IAAI,gBAC7B,wCAFF,UAIA,cAAC,IAAD,CAASF,GAAG,QAAZ,kBACA,cAAC,IAAD,CAASA,GAAG,YAAZ,sBACA,cAAC,IAAD,CAASA,GAAG,WAAZ,qBACA,mBAAGK,KAAK,mCAAmCC,OAAO,SAASC,IAAI,sBAA/D,qBACA,mBAAGF,KAAK,kCAAkCC,OAAO,SAASC,IAAI,sBAA9D,oBACA,mBAAGF,KAAK,iCAAiCC,OAAO,SAASC,IAAI,sBAA7D,oBACA,mBAAGF,KAAK,+DAA+DC,OAAO,SAASC,IAAI,sBAA3F,uBACA,mBAAGF,KAAK,sDAAsDC,OAAO,SAASC,IAAI,sBAAlF,kBACA,mBAAGF,KAAK,6DAA6DC,OAAO,SAASC,IAAI,sBAAzF,qBACA,mBAAGF,KAAK,mCAAR,4BCvGVG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.c78e5a99.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n\nconst Tilt = ({\n  children,\n  className,\n  reverse = 1,\n  max = 35,\n  perspective = 1000,\n  easing = 'cubic-bezier(.03,.98,.52,.99)',\n  scale = '1.1',\n  speed = '1000',\n  axis = null,\n  reset = true\n}) => {\n  const [style, setStyle] = useState({\n    willChange: 'transform',\n    transition: `${speed}ms ${easing}`\n  })\n  const tiltRef = useRef();\n\n  const handlePointerLeave = () => {\n    if (tiltRef.current) {\n      cancelAnimationFrame(tiltRef.current.updateCall);\n    }\n    \n    if (!reset) return;\n\n    window.requestAnimationFrame(() => {\n      setStyle({\n        ...style,\n        transform: `perspective(${perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`\n      });\n    });\n  }\n\n  const handlePointerMove = (e) => {\n    if (tiltRef.current.updateCall !== null) {\n      window.cancelAnimationFrame(tiltRef.current.updateCall);\n    }\n\n    const rect = tiltRef.current.getBoundingClientRect();\n    const { left, top } = rect;\n    const width = tiltRef.current.offsetWidth;\n    const height = tiltRef.current.offsetHeight;\n\n    tiltRef.current.pointer = {\n      clientX: e.nativeEvent.clientX,\n      clientY: e.nativeEvent.clientY\n    }\n    \n    tiltRef.current.updateCall = requestAnimationFrame(() => {\n      const x = (e.nativeEvent.clientX - left) / width;\n      const y = (e.nativeEvent.clientY - top) / height;\n\n      const _x = Math.min(Math.max(x, 0), 1);\n      const _y = Math.min(Math.max(y, 0), 1);\n\n      const tiltX = (reverse * (max / 2 - _x * max)).toFixed(2);\n      const tiltY = (reverse * (_y * max - max / 2)).toFixed(2);\n\n      setStyle({\n        ...style,\n        transform: `perspective(${perspective}px) ` +\n                   `rotateX(${(axis === \"x\" ? 0 : tiltY)}deg) ` +\n                   `rotateY(${(axis === \"y\" ? 0 : tiltX)}deg) ` +\n                   `scale3d(${scale}, ${scale}, ${scale})`\n      });\n    \n      tiltRef.current.updateCall = null;\n    });\n  }\n\n  useEffect(() => {\n    return () => {\n      if (!tiltRef.current) return;\n      cancelAnimationFrame(tiltRef.current.updateCall); // eslint-disable-line react-hooks/exhaustive-deps\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div\n      ref={tiltRef}\n      style={style}\n      className={className}\n      onPointerLeave={handlePointerLeave}\n      onPointerMove={handlePointerMove}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Tilt;\n","import { Switch, Route, NavLink, useHistory } from 'react-router-dom';\nimport Tilt from './Tilt';\n\nconst AccountButton = () => {\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push('/connect');\n  }\n\n  return (\n    <button\n      className='accountbutton primary'\n      onClick={handleClick}\n    >\n      Connect\n    </button>\n  )\n}\n\nconst Home = () => {\n  return (\n    <Tilt className=\"tilt\" max={5} scale={1.03}>\n      <div className=\"logo-white\">\n        <b>kitchen</b>swap\n      </div>\n    </Tilt>\n  );\n};\n\nconst NoMatch = () => {\n  return (\n    <>Nothing found!</>\n  );\n};\n\nconst Earn = () => {\n  return (\n    <>Earn</>\n  );\n};\n\nconst Exchange = () => {\n  return (\n    <>Exchange</>\n  );\n};\n\nconst App = () => {\n  return (\n    <div className='app'>\n      <header>        \n        <div className='header-logo-nav-account'>\n          <div className='navlogo left'>\n            <NavLink to='/'>  \n              <img src='./logo192.png' alt='kitchenswap' />\n              <b>kitchen</b>swap\n            </NavLink>\n          </div>\n          <div className='center'>\n            <nav>\n              <div>\n                <NavLink to='/earn'>\n                  Earn\n                </NavLink>\n                <NavLink to='/exchange'>\n                  Exchange\n                </NavLink>\n              </div>\n            </nav>\n          </div>\n          <div className='right'>\n            <AccountButton />\n          </div>\n        </div>\n      </header>\n\n      <section className='main'>\n        <div>\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='/earn'>\n              <Earn />\n            </Route>\n            <Route path='/exchange'>\n              <Exchange />\n            </Route>\n            <Route>\n              <NoMatch />\n            </Route>\n        </Switch>\n        </div>\n      </section>\n      <footer>\n        <div className=\"copyrights\">\n          <NavLink to='/'>  \n            <img src='./logo192.png' alt='kitchenswap' />\n            <b>kitchen</b>swap\n          </NavLink>\n          <NavLink to='/earn'>Earn</NavLink>\n          <NavLink to='/exchange'>Exchange</NavLink>\n          <NavLink to='/account'>Account</NavLink>\n          <a href='https://twitter.com/kitchen_swap' target='_blank' rel='noopener noreferrer'>Twitter</a>\n          <a href='https://medium.com/@kitchenswap' target='_blank' rel='noopener noreferrer'>Medium</a>\n          <a href='https://github.com/kitchenswap' target='_blank' rel='noopener noreferrer'>Github</a>\n          <a href='https://kitchenswap-finance.gitbook.io/kitchenswap/contracts' target='_blank' rel='noopener noreferrer'>Contracts</a>\n          <a href='https://kitchenswap-finance.gitbook.io/kitchenswap/' target='_blank' rel='noopener noreferrer'>Docs</a>\n          <a href='https://kitchenswap-finance.gitbook.io/kitchenswap/roadmap' target='_blank' rel='noopener noreferrer'>Roadmap</a>\n          <a href='javascript:alert(\"Coming soon!\")'>Audit</a>{/* eslint-disable-line jsx-a11y/anchor-is-valid, no-script-url*/}\n        </div>\n        \n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}